//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cookie.API.Protocol.Network.Types.Game.House
{
    using Cookie.API.Utils.IO;

    public class AccountHouseInformations : HouseInformations
    {
        
        public new const short ProtocolId = 390;
        
        public override short TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private HouseInstanceInformations m_houseInfos;
        
        public virtual HouseInstanceInformations HouseInfos
        {
            get
            {
                return m_houseInfos;
            }
            set
            {
                m_houseInfos = value;
            }
        }
        
        private short m_worldX;
        
        public virtual short WorldX
        {
            get
            {
                return m_worldX;
            }
            set
            {
                m_worldX = value;
            }
        }
        
        private short m_worldY;
        
        public virtual short WorldY
        {
            get
            {
                return m_worldY;
            }
            set
            {
                m_worldY = value;
            }
        }
        
        private int m_mapId;
        
        public virtual int MapId
        {
            get
            {
                return m_mapId;
            }
            set
            {
                m_mapId = value;
            }
        }
        
        private ushort m_subAreaId;
        
        public virtual ushort SubAreaId
        {
            get
            {
                return m_subAreaId;
            }
            set
            {
                m_subAreaId = value;
            }
        }
        
        public AccountHouseInformations(HouseInstanceInformations houseInfos, short worldX, short worldY, int mapId, ushort subAreaId)
        {
            m_houseInfos = houseInfos;
            m_worldX = worldX;
            m_worldY = worldY;
            m_mapId = mapId;
            m_subAreaId = subAreaId;
        }
        
        public AccountHouseInformations()
        {
        }
        
        public override void Serialize(IDataWriter writer)
        {
            base.Serialize(writer);
            writer.WriteUShort(((ushort)(m_houseInfos.TypeID)));
            m_houseInfos.Serialize(writer);
            writer.WriteShort(m_worldX);
            writer.WriteShort(m_worldY);
            writer.WriteInt(m_mapId);
            writer.WriteVarUhShort(m_subAreaId);
        }
        
        public override void Deserialize(IDataReader reader)
        {
            base.Deserialize(reader);
            m_houseInfos = ProtocolTypeManager.GetInstance<HouseInstanceInformations>((short)reader.ReadUShort());
            m_houseInfos.Deserialize(reader);
            m_worldX = reader.ReadShort();
            m_worldY = reader.ReadShort();
            m_mapId = reader.ReadInt();
            m_subAreaId = reader.ReadVarUhShort();
        }
    }
}
